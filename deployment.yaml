apiVersion: apps/v1
kind: Deployment
metadata:
  name: quicktrips-deployment
spec:
  selector:
    matchLabels:
      app: quicktrips
  replicas: 3
  template:
    metadata:
      name: pod-liveness-http
      labels:
        app: quicktrips
    spec:
      containers:
        - name: quicktrips-container
          image: "uk.icr.io/quicktrips/flask-image:latest"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /index
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  labels:
    app: quicktrips
spec:
  type: NodePort
  selector:
    app: quicktrips
  ports:
   - protocol: TCP
     port: 8080
     nodePort: 30269

---
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  name: "postgres-config"
  namespace: "default"
  labels:
    app: "postgres"
data:
  POSTGRES_DB: "demo_db"
  POSTGRES_USER: "dbadmin"
  POSTGRES_PASSWORD: "12345"


---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "postgres"
  namespace: "default"
  labels:
    app: "postgres"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: "postgres"
  template:
    metadata:
      labels:
        app: "postgres"
    spec:
      containers:
      - name: "postgres"
        image: "postgres:9.6.2"
        env:
        - name: "POSTGRES_DB"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_DB"
              name: "postgres-config"
        - name: "POSTGRES_USER"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_USER"
              name: "postgres-config"
        - name: "POSTGRES_PASSWORD"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_PASSWORD"
              name: "postgres-config"
        ports:
          - containerPort: 5432
            name: postgres
        volumeMounts:
          - name: postgres-storage
            mountPath: /var/lib/postgresql/db-data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres


---
apiVersion: v1
kind: Service
metadata:
 name: myloadbalancer
 annotations:
   service.kubernetes.io/ibm-load-balancer-cloud-provider-ip-type: private
   service.kubernetes.io/ibm-load-balancer-cloud-provider-zone: "uk-gb"
   service.kubernetes.io/ibm-load-balancer-cloud-provider-vlan: "2234945"
spec:
 type: LoadBalancer
 selector:
   app: nginx
 ports:
  - protocol: TCP
    port: 8080
 loadBalancerIP: 172.21.90.66