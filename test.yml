apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "flask"
  namespace: "default"
  labels:
    app: "flask"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "flask"
  template:
    metadata:
      labels:
        app: "flask"
    spec:
      containers:
      - name: "flask"
        image: "uk.icr.io/quicktrips/flask-image:latest"
        imagePullPolicy: "IfNotPresent"
        ports:
          - containerPort: 5000

---
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  name: "postgres-config"
  namespace: "default"
  labels:
    app: "postgres"
data:
  POSTGRES_DB: "postgres"
  POSTGRES_USER: "admin"
  POSTGRES_PASSWORD: "password"

---

apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
type: Opaque
data:
  user: c2FtcGxl
  password: cGxlYXNlY2hhbmdlbWU=



---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pvc
  labels:
    type: local
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeName: postgres-pv-claim

---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv
  labels:
    type: local
spec:
  capacity:
    storage: 2Gi
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/postgres-pv"

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres

---
apiVersion: v1
kind: Service
metadata:
  name: flask-app-service
spec:
  selector:
    app: flask-app
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 5000
  type: NodePort
